---
import Brand from "./Brand.astro";
import Dropdown from "./Dropdown.astro";

export interface MenuItem {
    to: string;
    title: string;
    children?: MenuItem[];
}

const menuItems: MenuItem[] = [
    {
        to: "/contact",
        title: "Contact",
    },
    {
        to: "/store",
        title: "Store",
    },
    {
        to: "/services",
        title: "Services",
    },
    {
        to: "/about",
        title: "About",
        children: [
            {
                to: "/about#history",
                title: "History",
            },
        ],
    },
];
---

<header>
    <div class="brand-container">
        <Brand />
        <div class="hamburger">
            <span></span><span></span><span></span>
        </div>
    </div>
    <nav class="menu large">
        <ul>
            {
                menuItems.map(({ to, title, children }) =>
                    !!children ? (
                        <li>
                            <a href={to}>{title}</a>
                            <span class="dropdown-toggle">&#9660;</span>
                            <div class="children">
                                {children!.map(({ to, title }) => (
                                    <a href={to}>{title}</a>
                                ))}
                            </div>
                        </li>
                    ) : (
                        <li>
                            <a href={to}>{title}</a>
                        </li>
                    )
                )
            }
        </ul>
    </nav>
    <nav class="menu small hidden">
        <ul>
            {
                menuItems.map(({ to, title, children }) =>
                    !!children ? (
                        <li>
                            <a href={to}>{title}</a>
                            <span class="dropdown-toggle">&#9660;</span>
                            <div class="children">
                                {children!.map(({ to, title }) => (
                                    <a href={to}>{title}</a>
                                ))}
                            </div>
                        </li>
                    ) : (
                        <li>
                            <a href={to}>{title}</a>
                        </li>
                    )
                )
            }
        </ul>
    </nav>
</header>

<style lang="scss" scoped>
    $large-width: 1020px;

    header {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        margin: 1em 0;
        display: flex;
        align-items: center;
        justify-content: space-between;
        color: var(--primary-0);
        padding: 0 .5em;
        @media screen and (max-width: $large-width) {
            flex-direction: column;
        }

    }

    .brand-container {
        display: flex;
        justify-content: space-between;
        align-items: center;

        width: 100%;
    }

    .hamburger {
        $size: 2em;
        width: $size;
        height: $size;

        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-around;

        cursor: pointer;

        span {
            display: block;
            width: 100%;
            height: 0.3em;
            background-color: var(--foreground-0);
            border-radius: 5px;
        }

        @media screen and (min-width: $large-width) {
            display: none;
        }
    }

    nav.menu {
        ul {
            display: flex;
            flex-direction: row;
            list-style-type: none;
            gap: 0.75rem;

            li {
                display: flex;
                align-items: center;
            }

            a {
                text-decoration: none;
                padding: 0.75em;
                color: var(--foreground-0);
            }
        }

        &.large {
            @media screen and (max-width: $large-width) {
                display: none;
            }
        }

        &.small {
            margin: 1em;
            width: 100%;
            background-color: var(--background-0);
            ul {
                flex-direction: column;
            }
            li {
                width: 100%;
            }

            &.hidden {
                display: none;
            }
        }
    }

    /* Below is dropdown */

    li {
        position: relative;
        color: var(--foreground-0);

        display: flex;
        align-items: center;
    }

    .dropdown-toggle {
        font-size: small;
        display: inline-block;
        cursor: pointer;
    }

    .dropdown-toggle.toggled {
        rotate: 180deg;
    }

    .dropdown-toggle.toggled ~ .children {
        display: block;
    }

    .children {
        display: none;
        bottom: -1em;
        position: absolute;
        background-color: var(--background-0);
    }
</style>

<script>
    const hamburgerToggle = document.querySelector(".hamburger") as HTMLElement;
    const smallMenu = document.querySelector(".menu.small") as HTMLElement;

    hamburgerToggle.addEventListener("click", () => {
        if (smallMenu.classList.contains("hidden")) {
            smallMenu.classList.remove("hidden");
        } else {
            smallMenu.classList.add("hidden");
        }
    });

    // Below dropdown toggles

    const dropdownToggles = document.querySelectorAll(".dropdown-toggle");

    dropdownToggles.forEach((element) => {
        element.addEventListener("click", ({ target }) => {
            if (!(target instanceof HTMLElement)) return;

            if (target.classList.contains("toggled")) {
                target.classList.remove("toggled");
            } else {
                target.classList.add("toggled");
            }
        });
    });
</script>
